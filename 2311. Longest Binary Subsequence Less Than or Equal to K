class Solution {
public:
    long long f(string s,int k){
        long long ans = 0;
        int p=0;
        for(int i=s.size()-1;i>=0;i--){
            if(s[i]=='1'){
                if(pow(2,p) > k)return k+1;
                ans+= pow(2,p);
            }
            if(ans>k)break;
            p++;
        }
        return ans;
    }
    int longestSubsequence(string s, int k) {
        string long_s = "";
        for(int i=s.size()-1;i>=0;i--){
            if(s[i]=='0') long_s = '0'+long_s;
            else if( f('1' + long_s,k) <= k ) long_s = '1' + long_s;  
        }
        return long_s.size();
    }
};
