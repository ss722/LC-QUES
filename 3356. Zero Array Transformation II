class Solution {
public:
     bool f(vector<int>& nums, vector<vector<int>>& queries, int k) {
       int n =nums.size();
        vector<int> prefix(n+1,0);
       for(int i=0;i<=k && i<queries.size();i++){
            int l=queries[i][0],r=queries[i][1],val=queries[i][2];
            prefix[l] -= val;
            if(r+1<n) prefix[r+1]+= val;
       }
       for(int i=1;i<n;i++) {prefix[i]+= prefix[i-1];} 
       
       for(int i=0;i<n;i++){
            if(nums[i] + prefix[i] >0) return false;
       }
       return true;
    }
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) {
        int n =queries.size();
        bool flag =true;
        for(auto it:nums) if(it!=0)flag = false;
        if(flag == true) return 0;
        int ans = n+1;
        int low = 0,high = n;
        while(low <= high){
            int mid = low + (high-low)/2 ;
        
            if(f(nums,queries,mid)){
                ans = min(ans,mid+1);
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans==n+1 ? -1 : ans;

    }
};
