class Solution {
public:
    int calc(int i,int j,int m,int n,vector<vector<int>>& grid,
    vector<vector<bool>>& vis ){
        
        if(i<0 || i>=m || j<0 || j >= n || vis[i][j] || grid[i][j]==0) return 0;
        vis[i][j]=true;

       return grid[i][j]+calc(i+1,j,m,n,grid,vis)+calc(i,j+1,m,n,grid,vis)+calc(i-1,j,m,n,grid,vis)+calc(i,j-1,m,n,grid,vis);
    }
    int findMaxFish(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<bool>> vis(m,vector<bool>(n,false));
        int ans = 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j] > 0 && !vis[i][j]){
                    ans = max(ans, calc(i,j,m,n,grid,vis));
                }
            }
        }
        return ans;
    }
};
